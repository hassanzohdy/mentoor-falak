_Component({
                selector: 'flk-accordion',
                c: 'FlkAccordion', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['isExpanded','toggle','panel'],
                children: {},
                render: function (component) {
                    let elivJ31 = eo('div',null,null,`class`,`flk-accordion ${ Config.get('app.direction') } ${cls({expanded: component.isExpanded})}`);
let elBv9CV = eo('h2',null,null, eventListeners, {onclick:[function(e) {var $el = this;component.toggle()}]},`class`,`accordion-heading`);
text( component.inputs.getOption('heading') );
let cnd46gP = ! component.isExpanded;
this.setState('stIoZbT', cnd46gP);
let cndS99u = !(cnd46gP);
this.setState('st7WCLW', cndS99u);
if (cnd46gP) { 
let elFtJgA = eo('i','oa9f',null,`class`,`${fas('angle-right')} closed-icon icon`);
ec('i');
}else { 
let el8mSmu = eo('i',null,null,`class`,`${fas('angle-down')} icon`);
ec('i');
}ec('h2');
let elns84T = eo('div',null,null, eventListeners, {onready:[function(e) {var $el = this;component.panel = $el}]},`class`,`accordion-body`);

        if (this.hasContent()) {
            this.content();
        }ec('div');

                    setTimeout(function () {
                        let $el = elns84T;
                        component.panel = $el;
                    }, 20);                
                ec('div');

                    this.isReadyToGo();
                }
        });