_Component({
                selector: 'flk-alert',
                c: 'FlkAlert', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['display','id','headingTheme','heading','message','withInput','confirmBtnEl','errorMsg','inputPlaceholder','inputValue','type','close','closeBtn','confirm','confirmBtn'],
                children: {},
                render: function (component) {
                    let cndb8fo = component.display;
this.setState('staqgF_', cndb8fo);
if (cndb8fo) { 
let elT8z_c = eo('div','fy5f',null,`id`,`${component.id}`,`class`,`flk-alert`);
let elfc0bg = eo('div','ieaf',null,`class`,`alert-content`);
let elggUZB = eo('div','ThJf',null,`class`,`alert-heading ${ component.headingTheme }`);
text(component.heading);
ec('div');
let elWA4Nx = eo('div','fYLf',null,`class`,`alert-message`);
text(component.message);
ec('div');
let cndKkRR = component.withInput;
this.setState('stLPvLW', cndKkRR);
if (cndKkRR) { 
let elgaECR = ev('input','nrsf',null, eventListeners, {oninput:[function(e) {component.inputValue = this.value;},function(e) {var $el = this;component.errorMsg = false;}],onkeyup:[function(e) {var $el = this;if (e.which == 13) component.confirmBtnEl.click();}]},`value`,`${fval(component.inputValue)}`,`placeholder`,`${component.inputPlaceholder}`,`type`,`text`,`class`,`input`);
elgaECR.value = fval(component.inputValue);

                    setTimeout(function () {
                        let $el = elgaECR;
                        
            if (true && ! elgaECR.focused) {
                elgaECR.setSelectionRange(elgaECR.value.length, elgaECR.value.length)
                elgaECR.focused = true;
                elgaECR.focus();
            }
        ;
                    }, 20);                
                }let cndwpyz = component.errorMsg;
this.setState('stsTAXF', cndwpyz);
if (cndwpyz) { 
let elLHqSP = eo('div','6qef',null,`class`,`red-text p-l1 bold text-left`);
text(trans('validation.required'));
ec('div');
}let elHJgM5 = eo('div',null,null,`class`,`alert-actions`);
let cnd1cRe = component.type == 'confirm';
this.setState('stvV5YB', cnd1cRe);
let cnd19WJ = component.type == 'inform';
this.setState('stW4pSP', cnd19WJ);
if (cnd1cRe) { 
let elNEuon = eo('button','Zbpf',null, eventListeners, {onclick:[function(e) {var $el = this;component.close()}]},`type`,`button`,`class`,`alert-close-btn`);
let el3mJCY = eo('i','np2f',null,`class`,`${fas('times')} icon`);
ec('i');
let elIFqGY = eo('span','f_Tf');
text(component.closeBtn);
ec('span');
ec('button');
let elUnL_h = eo('button','ncef',null, eventListeners, {onclick:[function(e) {var $el = this;component.confirm()}],onready:[function(e) {var $el = this;component.confirmBtnEl = $el;}]},`type`,`button`,`class`,`alert-confirm-btn`);
let elB9f61 = eo('i','ks5f',null,`class`,`${fas('check')} icon`);
ec('i');
let el25zNZ = eo('span','RmCf');
text(component.confirmBtn);
ec('span');
ec('button');

                    setTimeout(function () {
                        let $el = elUnL_h;
                        component.confirmBtnEl = $el;

            if (!component.withInput && ! elUnL_h.focused) {
                
                elUnL_h.focused = true;
                elUnL_h.focus();
            }
        ;
                    }, 20);                
                }else if (cnd19WJ) { 
let elU7kGy = eo('button',null,null, eventListeners, {onclick:[function(e) {var $el = this;component.close()}]},`type`,`button`,`class`,`alert-inform-btn`);
let elmQrkf = eo('span');
text(component.confirmBtn);
ec('span');
ec('button');
}ec('div');
ec('div');
ec('div');
}
                    this.isReadyToGo();
                }
        });