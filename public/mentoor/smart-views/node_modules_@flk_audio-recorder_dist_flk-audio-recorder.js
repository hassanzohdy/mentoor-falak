_Component({
                selector: 'flk-audio-recorder',
                c: 'AudioRecorder', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['recordIsEnabled','isRecording','record','stop'],
                children: {},
                render: function (component) {
                    let elauqtO = eo('span',null,null,`class`,`audio-wrapper`);
let cndvB8x = component.recordIsEnabled && ! component.isRecording;
this.setState('stg9NYz', cndvB8x);
let cndJEKc = component.isRecording;
this.setState('stODNKt', cndJEKc);
let cndiaPI = component.recordIsEnabled === false;
this.setState('st8MxtT', cndiaPI);
if (cndvB8x) { 
let elfkMNx = eo('button','C4Bf',null, eventListeners, {onclick:[function(e) {var $el = this;component.record()}]},`title`,``,`class`,`record-btn`,`type`,`button`);
let elrg9Ah = eo('i','jSGf',null,`class`,`${fas('microphone') + ' icon icon'}`);
ec('i');
ec('button');

                    setTimeout(function () {
                        let $el = elfkMNx;
                        
            true && tippyTooltip($el, {arrow:true,content:`${trans('startRecording')}`});
        ;
                    }, 20);                
                }else if (cndJEKc) { 
let elV40HS = eo('button',null,null, eventListeners, {onclick:[function(e) {var $el = this;component.stop()}]},`type`,`button`,`class`,`recorder-container`);
let elmwW3G = eo('div',null,null,`class`,`outer`);
ec('div');
let elU3Nya = eo('div',null,null,`class`,`outer-2`);
ec('div');
let elRRquB = eo('div',null,null,`class`,`icon-microphone`);
text(`Stop`);
ec('div');
ec('button');
}else if (cndiaPI) { 
let elW5_IV = eo('span',null,null,`class`,`red-text`);
text(`Microphone is disabled in your browser, please enable it to start recording.`);
ec('span');
}ec('span');

                    this.isReadyToGo();
                }
        });