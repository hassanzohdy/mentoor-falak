_Component({
                selector: 'flk-datepicker',
                c: 'Datepicker', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['name','id','placeholder','inputValue','isRequired'],
                children: {},
                render: function (component) {
                    let elUWzR8 = eo('div',null,null,`class`,`datepicker-wrapper`);
let elanyhX = eo('div',null,null,`class`,`form-group`);
elanyhX.cls = {'group-error': !!cfrmdlr.getError(component.name) };

            for (let className in elanyhX.cls) {
                elanyhX.classList.toggle(className, elanyhX.cls[className]);
            }  
            let elXHQIc = eo('label',null,null,`for`,`${component.id}`);
text(trans(component.inputs.getOption('label')));
let cndpXqe = component.isRequired;
this.setState('st4oRmC', cndpXqe);
if (cndpXqe) { 
let elty6yu = eo('span','noyf',null,`title`,`${trans(`required`)}`,`class`,`required`);
text(`*`);
ec('span');
}ec('label');
let el5CE08 = ev('input',null,null, eventListeners, {oninput:[function(e) {component.inputValue = this.value;},function(e) {let value = this.value.trim();if (component.isRequired && Is.empty(value)) {return cfrmdlr.addError(component.name, 'required', trans('validation.required'));}return cfrmdlr.removeError(component.name);}]},`value`,`${fval(component.inputValue)}`,`id`,`${component.id}`,`name`,`${(component.name).toInputName()}`,`placeholder`,`${component.placeholder}`,`type`,`text`,`class`,`${ component.inputs.getOption('class', '') }`);
component.input = el5CE08;
el5CE08.value = fval(component.inputValue);
let cndOycO = cfrmdlr.getError(component.name);
this.setState('stnR6FL', cndOycO);
if (cndOycO) { 
let eloMez6 = eo('div','0uzf',null,`class`,`error-msg`);
text(cfrmdlr.getError(component.name));
ec('div');
}ec('div');
ec('div');

                    this.isReadyToGo();
                }
        });