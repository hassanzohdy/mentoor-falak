_Component({
                selector: 'flk-multiple-inputs',
                c: 'FlkMultipleInputs', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['id','label','options','isMultiLingual','languages','subName','optionName','required','name','removeOption','addNewOption'],
                children: {},
                render: function (component) {
                    let elcqZq8 = eo('div',null,null,`class`,`form-group`);
let elqqsP3 = eo('label',null,null,`for`,`${ component.id }`);
text(component.label);
ec('label');
for (let i in component.options) {
let option = component.options[i]; 
 let iiUYzc = 'h_e6LwT' + i;
let el0ivct = eo('div','II9Ek4yjRFn8' + i+iiUYzc,null,`class`,`row m-t-1`);
let elSCcZR = eo('div','HK2ff'+iiUYzc,null,`class`,`col-sm-10`);
let cndkYjM = component.isMultiLingual;
this.setState('stfeK_G', cndkYjM);
let cndPSYd = !(cndkYjM);
this.setState('stlWTyy', cndPSYd);
if (cndkYjM) { 
console.log(2);
for (let langIndex in component.languages) {
let languageCode = component.languages[langIndex]; 
 let iidPdx = 'q9NLuAK' + langIndex;
let elmQ0w0 = ev('input','FHfrtm3d_9Hg' + langIndex+iiUYzc+iidPdx,null, eventListeners, {oninput:[function(e) {var $el = this;Object.set(option, component.subName ? component.subName + '.' + languageCode : languageCode, $el.value)},function(e) {let value = this.value.trim();if (component.required && Is.empty(value)) {return cfrmdlr.addError(component.name + '.' + i + '.' + (component.subName ? component.subName + '.' : '') + languageCode, 'required', trans('validation.required'));}return cfrmdlr.removeError(component.name + '.' + i + '.' + (component.subName ? component.subName + '.' : '') + languageCode);}]},`name`,`${(component.name + '.' + i + '.' + (component.subName ? component.subName + '.' : '') + languageCode).toInputName()}`,`placeholder`,`${component.optionName + ' ' + languageCode}`,`value`,`${component.subName ? Object.get(option, component.subName + '.' + languageCode) : option[languageCode]}`,`type`,`text`,`class`,`form-control`);
let cndEQD9 = cfrmdlr.getError(component.name + '.' + i + '.' + (component.subName ? component.subName + '.' : '') + languageCode);
this.setState('stRKfe_', cndEQD9);
if (cndEQD9) { 
let el0Mw2H = eo('div','PaKff'+iiUYzc+iidPdx,null,`class`,`error-msg`);
text(cfrmdlr.getError(component.name + '.' + i + '.' + (component.subName ? component.subName + '.' : '') + languageCode));
ec('div');
}}
}else { 
let elYi725 = ev('input','6OMff'+iiUYzc,null, eventListeners, {oninput:[function(e) {component.options[i] = this.value;},function(e) {let value = this.value.trim();if (component.required && Is.empty(value)) {return cfrmdlr.addError(component.name + '.' + i, 'required', trans('validation.required'));}return cfrmdlr.removeError(component.name + '.' + i);}]},`value`,`${fval(component.options[i])}`,`name`,`${(component.name + '.' + i).toInputName()}`,`placeholder`,`${component.optionName}`,`type`,`text`,`class`,`form-control`);
elYi725.value = fval(component.options[i]);
let cnd0QNr = cfrmdlr.getError(component.name + '.' + i);
this.setState('stm3fD3', cnd0QNr);
if (cnd0QNr) { 
let elq44ED = eo('div','YHpff'+iiUYzc,null,`class`,`error-msg`);
text(cfrmdlr.getError(component.name + '.' + i));
ec('div');
}}ec('div');
let cnddWdy = ! component.required || Number(i) > 0;
this.setState('st2792g', cnddWdy);
if (cnddWdy) { 
let elIhUF_ = eo('div','6kKff'+iiUYzc,null,`class`,`col-sm-2`);
let elkM6pw = eo('button','CRYff'+iiUYzc,null, eventListeners, {onclick:[function(e) {var $el = this;component.removeOption(i)}]},`title`,``,`type`,`button`,`class`,`btn btn-circle m-0 btn-sm icon btn-danger`);
let el3tLY2 = eo('i','qSGff'+iiUYzc,null,`class`,`${fas('trash') + ' icon'}`);
ec('i');
ec('button');

                    setTimeout(function () {
                        let $el = elkM6pw;
                        
            true && tippyTooltip($el, {arrow:true,content:`${ trans('deleteItem', component.optionName) }`});
        ;
                    }, 20);                
                ec('div');
}ec('div');
}
let eldoKxj = eo('div');
let elV9WGA = eo('button',null,null, eventListeners, {onclick:[function(e) {var $el = this;component.addNewOption()}]},`title`,``,`type`,`button`,`class`,`btn icon btn-sm btn-circle btn-primary`);
let el3T9cu = eo('i',null,null,`class`,`${fas('plus') + ' icon'}`);
ec('i');
ec('button');

                    setTimeout(function () {
                        let $el = elV9WGA;
                        
            true && tippyTooltip($el, {arrow:true,content:`${ trans('add-new-item', component.optionName) }`});
        ;
                    }, 20);                
                ec('div');
ec('div');

                    this.isReadyToGo();
                }
        });