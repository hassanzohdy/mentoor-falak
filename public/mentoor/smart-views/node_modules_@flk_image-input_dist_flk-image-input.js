_Component({
                selector: 'flk-image-input',
                c: 'ImageInput', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['id','validate','fileInput','getName','selectImage','imageSrc','getImageTitle','error','errorClasses'],
                children: {},
                render: function (component) {
                    let cndHt7r = component.inputs.getOption('label');
this.setState('stu7m3V', cndHt7r);
if (cndHt7r) { 
let elKq_Kq = eo('label','BAYf',null,`for`,`${ component.id }`);
text(component.inputs.getOption('label'));
ec('label');
}let elojZUJ = eo('span',null,null,`class`,`image-holder`);
let elIxjL2 = ev('input',null,null, eventListeners, {oninput:[function(e) {var $el = this;component.validate()}],onready:[function(e) {var $el = this;component.fileInput = $el}]},`name`,`${(component.getName()).toInputName()}`,`type`,`file`,`class`,`d-none`,`accept`,`image/*`);

                    setTimeout(function () {
                        let $el = elIxjL2;
                        component.fileInput = $el;
                    }, 20);                
                let elWIOst = eo('button',null,null, 'style', this.__info.style || {}, eventListeners, mergeEvents({onclick:[function(e) {var $el = this;component.selectImage()}]}, this.__info.events), boolAttrs, Object.merge({}, this.__info.boolAttrs || {}),...normalAttrs(Object.merge({type:'button',class:'img-preview'}, this.__info.attrs || {})));
let elwzzEc = ev('img',null,null,`src`,`${component.imageSrc}`,`title`,`${component.getImageTitle()}`,`alt`,`${component.getImageTitle()}`);
ec('button');
ec('span');
let cndI7FI = component.error;
this.setState('stL12IP', cndI7FI);
if (cndI7FI) { 
let el_pSo0 = eo('span','Qh2f',null,`class`,`${ component.errorClasses }`);
text(component.error);
ec('span');
}
                    this.isReadyToGo();
                }
        });